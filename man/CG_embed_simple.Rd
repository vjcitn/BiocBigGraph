% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simple_emb.R
\name{CG_embed_simple}
\alias{CG_embed_simple}
\title{complete simple processing of SCE}
\usage{
CG_embed_simple(
  sce,
  cell_id_var,
  workdir = tempdir(),
  N_GENES = 1000,
  N_BINS = 5,
  N_PARTITIONS = 1L,
  FEATURIZED = FALSE,
  entity_path = "ents",
  cuts = NULL,
  colname = NULL,
  ...
)
}
\arguments{
\item{sce}{SingleCellExperiment instance ready for conversion with 'sce_to_triples'}

\item{cell_id_var}{character(1) mandatory selection of
column of colData(sce) that is to be used as colnames
(which is often missing)}

\item{workdir}{location of temporary storage, defaults to tempdir()}

\item{N_GENES}{numeric(1) passed to 'sce_to_triples'}

\item{N_BINS}{numeric(1) passed to 'sce_to_triples' for discretization}

\item{N_PARTITIONS}{integer(1) for PytorchBigGraph configuration}

\item{FEATURIZED}{logical(1) for PytorchBigGraph configuration}

\item{entity_path}{character(1) subfolder of tempdir for entity recording}

\item{cuts}{numeric() passed to 'sce_to_triples' for discretization}

\item{colname}{character(1) passed to 'sce_to_triples' identifying 'cell' entity token}

\item{\dots}{passed directly to \code{set_config}}
}
\value{
SingleCellExperiment with additional altExp and rowData corresponding to cell and gene embeddings
}
\description{
complete simple processing of SCE
}
\note{
Any changes to configuration can be passed via ....  For example,
\code{num_epochs} defaults to 5L, pass directly in this function.
}
\examples{
# NB as of April 2024 we do not control the random operations
# of PyTorch BigGraph ... this example is not reproducible
p3k = TENxPBMCData::TENxPBMCData("pbmc3k")
assay(p3k) = as.matrix(assay(p3k)) # dense for now
p3k = scuttle::logNormCounts(p3k)
set.seed(1234)
co = CG_embed_simple(p3k, cell_id_var="Barcode", num_epochs=6L,
   N_GENES=50, dynamic_relations=FALSE, colname="Barcode")
co
pp = prcomp(t(assay(altExp(co,"pbg_cell_emb"))))
data(p3k.fine)
coar = sapply(strsplit(p3k.fine, ":"), "[", 1)
pairs(pp$x[,1:4], pch=".", col=factor(coar))
library(ggplot2)
mdf = data.frame(pp$x[,c(2,4)], type=coar)
ggplot(mdf, aes(x=PC2, y=PC4, colour=coar, text=coar)) + 
    geom_point()
}
